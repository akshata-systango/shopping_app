{"ast":null,"code":"var _jsxFileName = \"/home/ubox143/Desktop/shopping_app/shopping_app/src/store/CartProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport React from 'react';\nimport CartContext from './CartContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'Add') {\n    const UpdateItem = state.items.concat(action.item);\n    const UpdataeTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: UpdateItem,\n      totalAmount: UpdataeTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispetchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const AddItemToCartHandler = item => {\n    dispetchCartAction({\n      type: 'Add',\n      item: item\n    });\n  };\n\n  const RemoveItemFromCartHandler = id => {\n    dispetchCartAction({\n      type: 'Remove',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    AddItem: AddItemToCartHandler,\n    RemoveItem: RemoveItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"M5Fc4DOSxSkQIglZ1cuKiFPdBYE=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/home/ubox143/Desktop/shopping_app/shopping_app/src/store/CartProvider.jsx"],"names":["useReducer","React","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","UpdateItem","concat","item","UpdataeTotalAmount","price","amount","CartProvider","props","cartState","dispetchCartAction","AddItemToCartHandler","RemoveItemFromCartHandler","id","cartContext","AddItem","RemoveItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,gBAAgB,GAAE;AACxBC,EAAAA,KAAK,EAAG,EADgB;AAExBC,EAAAA,WAAW,EAAG;AAFU,CAAxB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAkB;AAClC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA0B;AACtB,UAAMC,UAAU,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAAnB;AACA,UAAMC,kBAAkB,GAAGN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MAA/E;AACA,WAAO;AACHX,MAAAA,KAAK,EAAGM,UADL;AAEHL,MAAAA,WAAW,EAAGQ;AAFX,KAAP;AAKH;;AACD,SAAOV,gBAAP;AACH,CAXD;;AAaA,MAAMa,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAEhC,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCnB,UAAU,CAACM,WAAD,EAAaH,gBAAb,CAAlD;;AAEA,QAAMiB,oBAAoB,GAAIR,IAAD,IAAU;AACnCO,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAG,KAAR;AAAeG,MAAAA,IAAI,EAAGA;AAAtB,KAAD,CAAlB;AACH,GAFD;;AAGA,QAAMS,yBAAyB,GAAIC,EAAD,IAAQ;AACtCH,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAE,QAAP;AAAiBa,MAAAA,EAAE,EAAEA;AAArB,KAAD,CAAlB;AACH,GAFD;;AAII,QAAMC,WAAW,GAAG;AAChBnB,IAAAA,KAAK,EAAEc,SAAS,CAACd,KADD;AAEhBC,IAAAA,WAAW,EAAEa,SAAS,CAACb,WAFP;AAGhBmB,IAAAA,OAAO,EAAEJ,oBAHO;AAIhBK,IAAAA,UAAU,EAAGJ;AAJG,GAApB;AAMA,sBACA,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACIN,KAAK,CAACS;AADV;AAAA;AAAA;AAAA;AAAA,UADA;AAIH,CArBD;;GAAMV,Y;;KAAAA,Y;AAwBN,eAAeA,YAAf","sourcesContent":["import { useReducer } from 'react';\nimport React from 'react';\nimport CartContext from './CartContext';\n\nconst defaultCartState ={\nitems : [],\ntotalAmount : 0\n};\n\nconst cartReducer = (state,action) => {\n    if( action.type === 'Add'){\n        const UpdateItem = state.items.concat(action.item);\n        const UpdataeTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n        return {\n            items : UpdateItem,\n            totalAmount : UpdataeTotalAmount\n        };\n\n    }\n    return defaultCartState;\n}\n\nconst CartProvider = (props) => {\n\nconst [cartState, dispetchCartAction] = useReducer(cartReducer,defaultCartState);\n\nconst AddItemToCartHandler = (item) => {\n    dispetchCartAction({type : 'Add', item : item});\n}\nconst RemoveItemFromCartHandler = (id) => {\n    dispetchCartAction({type: 'Remove', id: id})\n}\n\n    const cartContext = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        AddItem: AddItemToCartHandler,\n        RemoveItem:  RemoveItemFromCartHandler,\n    };\n    return(\n    <CartContext.Provider value={cartContext}>\n       {props.children}\n    </CartContext.Provider>)\n}\n\n\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}